export const translations = {
  en: {
    // Header
    cryptoTradingBot: 'Crypto Trading Bot',
    running: 'Running',
    stopped: 'Stopped',
    startBot: 'Start Bot',
    stopBot: 'Stop Bot',
    settings: 'Settings',
    
    // Portfolio Stats
    totalValue: 'Total Value',
    totalPnL: 'Total P&L',
    availableBalance: 'Available Balance',
    activePositions: 'Active Positions',
    
    // Navigation
    overview: 'Overview',
    positions: 'Positions',
    trades: 'Trades',
    news: 'News',
    
    // Overview
    portfolioPerformance: 'Portfolio Performance',
    topTradingPairs: 'Top Trading Pairs',
    
    // Positions
    symbol: 'Symbol',
    side: 'Side',
    size: 'Size',
    entryPrice: 'Entry Price',
    exitPrice: "Exit Price",
    currentPrice: 'Current Price',
    age: 'Age',
    noActivePositions: 'No active positions',
    
    // Trades
    tradingHistory: 'Trading History',
    time: 'Time',
    type: 'Type',
    quantity: 'Quantity',
    price: 'Price',
    status: 'Status',
    profit: 'Profit',
    noTradesExecuted: 'No trades executed yet',
    
    // News
    cryptoNewsAnalysis: 'Crypto News Analysis',
    affects: 'Affects',
    impact: 'Impact',
    noNewsAvailable: 'No news available',
    
    // Settings
    botSettings: 'Bot Settings',
    tradingMode: 'Trading Mode',
    tradingModeType: 'Trading Mode Type',
    spotTrading: 'Spot Trading',
    spotTradingDescription: 'Buy and hold assets without leverage',
    futuresTrading: 'Futures Trading',
    futuresTradingDescription: 'Trade long and short positions with leverage',
    spotModeInfo: 'ℹ️ Spot mode: only BUY trades are allowed and no leverage is used.',
    futuresModeInfo: '⚡ Futures mode: long and short trading with leverage is enabled.',
    simulation: 'Simulation',
    paperTradingFakeMoney: 'Paper trading with fake money',
    realTrading: 'Real Trading',
    liveTradingRealMoney: 'Live trading with real money',
    warningRealTrading: 'Warning: Real trading involves financial risk',
    riskManagement: 'Risk Management',
    maxRiskPerTrade: 'Max Risk Per Trade',
    stopLoss: 'Stop Loss',
    takeProfit: 'Take Profit',
    maxPositions: 'Max Positions',
    tradingFeatures: 'Trading Features',
    newsBasedTrading: 'News-Based Trading',
    tradeBasedSentiment: 'Trade based on sentiment analysis',
    technicalAnalysis: 'Technical Analysis',
    useRsiMacdBollinger: 'Use RSI, MACD, and Bollinger Bands',
    simulationBalance: 'Simulation Balance',
    language: 'Language',
    cancel: 'Cancel',
    saveSettings: 'Save Settings',
    binanceApiKey: 'Binance API Key',
    binanceApiSecret: 'Binance API Secret',
    enterApiKey: 'Enter your Binance API Key',
    enterApiSecret: 'Enter your Binance API Secret',
    llama3Configuration: 'Llama 3 Configuration',
    llama3Url: 'Llama 3 URL',
    llama3Model: 'Llama 3 Model',
    llama3UrlDescription: 'URL of your local Llama 3 instance (e.g., Ollama)',
    llama3ModelDescription: 'Model name to use for analysis',
    
    // AI Preferences
    aiPreferences: 'AI Preferences',
    enableAdaptiveStrategy: 'Enable Adaptive Strategy',
    adaptiveStrategyDescription: 'Enable the bot to learn and adapt its trading behavior based on past performance. Disable to use static strategies only.',
    staticModeWarning: 'Static Mode: Using fixed trading rules without AI learning',
    resetAiLearning: 'Reset AI Learning',
    resetAiLearningDescription: 'Reset all learned patterns and confidence scores. Trade history will be preserved.',
    resetConfirmTitle: 'Reset AI Learning',
    resetConfirmMessage: 'Are you sure you want to reset AI learning? This will clear all learned patterns and confidence scores. This cannot be undone.',
    resetAllConfirmMessage: 'Are you sure you want to reset ALL bot data? This will permanently delete:\n\n• All AI learning (patterns, confidence scores)\n• Complete trade history\n• Portfolio statistics (total trades, win rate, P&L)\n• Performance metrics\n\nThis action cannot be undone.',
    resetAiLearningSuccess: 'AI learning has been reset.',
    resetAiOnly: 'Reset AI only',
    resetAllBotData: 'Reset All Bot Data (including trade history and stats)',
    confidenceThreshold: 'Confidence Threshold',
    confidenceThresholdDescription: 'Minimum confidence required for all AI-based trades and adaptive strategy decisions',
    
    // Multi-Strategy Settings
    multiStrategySettings: 'Multi-Strategy Settings',
    enableMultiStrategy: 'Enable Multi-Strategy',
    multiStrategyDescription: 'Run multiple AI strategies in parallel and combine their signals',
    rsiMacdStrategy: 'RSI + MACD Strategy',
    newsSentimentStrategy: 'News Sentiment Strategy',
    volumeSpikeStrategy: 'Volume Spike Strategy',
    strategyWeight: 'Weight',
    
    // Auto-Rebalance Settings
    autoRebalanceSettings: 'Auto-Rebalance and Position Scaling',
    enableAutoRebalance: 'Enable Auto-Rebalance',
    autoRebalanceDescription: 'Automatically scale positions up/down based on performance',
    scaleInThreshold: 'Scale In Threshold',
    scaleOutThreshold: 'Scale Out Threshold',
    enableTrailingStop: 'Enable Trailing Stop',
    trailingStopPercent: 'Trailing Stop %',
    
    // Simulation Replay
    simulationReplay: 'Simulation Replay',
    enableSimulationReplay: 'Enable Simulation Replay',
    simulationReplayDescription: 'Test strategies against historical data',
    runReplay: 'Run Replay',
    selectDate: 'Select Date',
    replayResults: 'Replay Results',
    
    // Sentiment
    bullish: 'BULLISH',
    bearish: 'BEARISH',
    neutral: 'NEUTRAL',
    
    // Trading
    long: 'LONG',
    short: 'SHORT',
    buy: 'BUY',
    sell: 'SELL',
    filled: 'FILLED',
    pending: 'PENDING',
    cancelled: 'CANCELLED',
    
    // Volume
    volume: 'Vol',
    
    // Log Panel
    botLogs: 'Bot Logs',
    clearLogs: 'Clear Logs',
    searchLogs: 'Search logs...',
    all: 'All',
    info: 'Info',
    trade: 'Trade',
    learning: 'Learning',
    warning: 'Warning',
    error: 'Error',
    noLogsMatchFilter: 'No logs match the current filter',
    noLogsYet: 'No logs yet',
    totalLogs: 'Total logs',
    showing: 'Showing',
    
    // Log Messages
    botStarted: 'Trading bot started in {mode} mode',
    botStopped: 'Trading bot stopped',
    tradeExecuted: '{action} {quantity} {symbol} at ${price}',
    positionClosed: 'Position closed: {symbol} P&L: ${pnl} ({reason})',
    signalGenerated: '{action} signal for {symbol} (confidence: {confidence})',
    adaptiveDecision: 'Adaptive strategy: {decision} - {reason}',
    signalEvaluation: '{symbol}: {action} (confidence: {confidence})',
    randomExplorationTrade: 'Random exploration trade: {action} {symbol}',
    fastLearningTradeExecuted: 'Fast Learning Trade: {action} {symbol} (confidence: {confidence})',
    earlyRetraining: 'Fast Learning: Early model retraining triggered',
    forcedExplorationTrade: 'Forced exploration trade on {symbol}',
    learningUpdate: 'AI learning updated: {patterns} patterns learned',
    riskAdjustment: 'Risk level adjusted to {level}% due to {reason}',
    tradeBlocked: 'Trade blocked: {symbol} - {reason}',
    fastLearningTrade: 'Fast learning trade: {action} {symbol}',
    patternLearned: 'New profitable pattern learned: {description}',
    websocketConnected: 'WebSocket connected for {symbol}',
    websocketDisconnected: 'WebSocket disconnected for {symbol}',
    configLoaded: 'Bot configuration loaded',
    configSaved: 'Bot configuration saved',
    portfolioUpdated: 'Portfolio updated: ${value} total value',
    updatingPositions: 'Updating {count} positions',
    noMarketDataForPosition: 'No market data for position {symbol}',
    multiExitTriggered: 'Multi-exit triggered for {symbol}: {reason}',
    marketRegimeExit: 'Market regime exit for {symbol}: {reason}',
    timeBasedExit: 'Time-based exit for {symbol}: {reason}',
    traditionalExit: 'Traditional exit for {symbol}: {reason}',
    entryBlocked: 'Entry blocked for {symbol}: {reason}',
    realTradeExecutionFailed: 'Real trade execution failed for {symbol}',
    portfolioDebug: 'Portfolio Debug: Available: ${available}, Total P&L: ${totalPnl}',
    aiLearningResetComplete: 'AI learning reset complete',
    allBotDataResetComplete: 'All bot data reset complete - history and statistics cleared',
    portfolioStatus: 'Portfolio Status: {positions} positions, ${totalValue} total value, ${totalPnl} P&L',
    tradingSignalGenerated: 'Trading signal: {action} {symbol} (confidence: {confidence})',
    tradingLoopError: 'Trading loop error',
    aggressiveTradeExecuted: 'Aggressive trade: {action} {symbol} ({positions}/{maxPositions} positions, {profitTarget} target)',
    maxSymbolsToTrade: 'Number of Coins to Trade',
    maxSymbolsToTrade_description: 'Specifies how many coins the bot will monitor simultaneously. Highest volume coins are prioritized.',
     prev: "Back",
  next: "Next",
  page: "Page",
     duration: "Duration",
  seconds: "seconds",
  minutes: "minutes",
  hours: "hours",
  days: "days",
  positionSize: "Position Size",
  tradeHistory:"Trade History"
  },
  tr: {
    // Header
    cryptoTradingBot: 'Kripto Ticaret Botu',
    running: 'Çalışıyor',
    stopped: 'Durduruldu',
    startBot: 'Botu Başlat',
    stopBot: 'Botu Durdur',
    settings: 'Ayarlar',
    
    // Portfolio Stats
    totalValue: 'Toplam Değer',
    totalPnL: 'Toplam K/Z',
    availableBalance: 'Kullanılabilir Bakiye',
    activePositions: 'Aktif Pozisyonlar',
    
    // Navigation
    overview: 'Genel Bakış',
    positions: 'Pozisyonlar',
    trades: 'İşlemler',
    news: 'Haberler',
    
    // Overview
    portfolioPerformance: 'Portföy Performansı',
    topTradingPairs: 'En İyi İşlem Çiftleri',
    
    // Positions
    symbol: 'Sembol',
    side: 'Yön',
    size: 'Boyut',
    entryPrice: 'Giriş Fiyatı',
    exitPrice: "Çıkış Fiyatı",
    currentPrice: 'Güncel Fiyat',
    age: 'Yaş',
    noActivePositions: 'Aktif pozisyon yok',
    
    // Trades
    tradingHistory: 'İşlem Geçmişi',
    time: 'Zaman',
    type: 'Tip',
    quantity: 'Miktar',
    price: 'Fiyat',
    status: 'Durum',
    profit: 'Kar',
    noTradesExecuted: 'Henüz işlem yapılmadı',
    
    // News
    cryptoNewsAnalysis: 'Kripto Haber Analizi',
    affects: 'Etkiler',
    impact: 'Etki',
    noNewsAvailable: 'Haber mevcut değil',
    
    // Settings
    botSettings: 'Bot Ayarları',
    tradingMode: 'İşlem Modu',
    tradingModeType: 'İşlem Modu Türü',
    spotTrading: 'Spot İşlem',
    spotTradingDescription: 'Kaldıraç olmadan varlık alım ve tutma',
    futuresTrading: 'Vadeli İşlem',
    futuresTradingDescription: 'Kaldıraçlı işlem, uzun ve kısa pozisyonlar',
    spotModeInfo: 'Spot modu: Sadece ALIM emirleri, kaldıraç yok, gerçek varlık sahipliği',
    futuresModeInfo: 'Vadeli modu: Hem ALIM/SATIM, kaldıraç mevcut, marjin ticareti',
    simulation: 'Simülasyon',
    paperTradingFakeMoney: 'Sahte para ile kağıt ticaret',
    realTrading: 'Gerçek İşlem',
    liveTradingRealMoney: 'Gerçek para ile canlı ticaret',
    warningRealTrading: 'Uyarı: Gerçek ticaret finansal risk içerir',
    riskManagement: 'Risk Yönetimi',
    maxRiskPerTrade: 'İşlem Başına Maks Risk',
    stopLoss: 'Zarar Durdur',
    takeProfit: 'Kar Al',
    maxPositions: 'Maks Pozisyon',
    tradingFeatures: 'İşlem Özellikleri',
    newsBasedTrading: 'Haber Tabanlı İşlem',
    tradeBasedSentiment: 'Duygu analizi tabanlı ticaret',
    technicalAnalysis: 'Teknik Analiz',
    useRsiMacdBollinger: 'RSI, MACD ve Bollinger Bantları kullan',
    simulationBalance: 'Simülasyon Bakiyesi',
    language: 'Dil',
    cancel: 'İptal',
    saveSettings: 'Ayarları Kaydet',
    binanceApiKey: 'Binance API Anahtarı',
    binanceApiSecret: 'Binance API Gizli Anahtarı',
    enterApiKey: 'Binance API Anahtarınızı girin',
    enterApiSecret: 'Binance API Gizli Anahtarınızı girin',
    llama3Configuration: 'Llama 3 Yapılandırması',
    llama3Url: 'Llama 3 URL',
    llama3Model: 'Llama 3 Model',
    llama3UrlDescription: 'Yerel Llama 3 örneğinizin URL\'si (örn. Ollama)',
    llama3ModelDescription: 'Analiz için kullanılacak model adı',
    
    // AI Preferences
    aiPreferences: 'AI Tercihleri',
    enableAdaptiveStrategy: 'Uyarlanabilir Stratejiyi Etkinleştir',
    adaptiveStrategyDescription: 'Botun geçmiş performansa dayalı olarak öğrenmesini ve ticaret davranışını uyarlamasını sağlar. Sadece statik stratejiler kullanmak için devre dışı bırakın.',
    staticModeWarning: 'Statik Mod: Sabit ticaret kuralları kullanılıyor, AI öğrenme yok',
    resetAiLearning: 'AI Öğrenmeyi Sıfırla',
    resetAiLearningDescription: 'Tüm öğrenilen kalıpları ve güven puanlarını sıfırla. Ticaret geçmişi korunacak.',
    resetConfirmTitle: 'AI Öğrenmeyi Sıfırla',
    resetConfirmMessage: 'AI öğrenmeyi sıfırlamak istediğinizden emin misiniz? Bu, tüm öğrenilen kalıpları ve güven puanlarını temizleyecek. Bu geri alınamaz.',
    resetAllConfirmMessage: 'TÜM bot verilerini sıfırlamak istediğinizden emin misiniz? Bu kalıcı olarak şunları silecek:\n\n• Tüm AI öğrenme (kalıplar, güven puanları)\n• Tüm işlem geçmişi\n• Portföy istatistikleri (toplam işlem, kazanma oranı, K/Z)\n• Performans metrikleri\n\nBu işlem geri alınamaz.',
    resetAiLearningSuccess: 'AI öğrenme sıfırlandı.',
    resetAiOnly: 'Sadece AI\'ı sıfırla',
    resetAllBotData: 'Tüm Bot Verilerini Sıfırla (ticaret geçmişi ve istatistikler dahil)',
    confidenceThreshold: 'Güven Eşiği',
    confidenceThresholdDescription: 'Tüm AI tabanlı işlemler ve uyarlanabilir strateji kararları için gereken minimum güven seviyesi. Hem AI sinyal üretimi hem de uyarlanabilir strateji filtrelemesi tarafından kullanılır.',
    
    // Multi-Strategy Settings
    multiStrategySettings: 'Çoklu Strateji Ayarları',
    enableMultiStrategy: 'Çoklu Stratejiyi Etkinleştir',
    multiStrategyDescription: 'Birden fazla AI stratejisini paralel çalıştır ve sinyallerini birleştir',
    rsiMacdStrategy: 'RSI + MACD Stratejisi',
    newsSentimentStrategy: 'Haber Duygu Stratejisi',
    volumeSpikeStrategy: 'Hacim Artışı Stratejisi',
    strategyWeight: 'Ağırlık',
    
    // Auto-Rebalance Settings
    autoRebalanceSettings: 'Otomatik Dengeleme ve Pozisyon Ölçeklendirme',
    enableAutoRebalance: 'Otomatik Dengelemeyi Etkinleştir',
    autoRebalanceDescription: 'Performansa göre pozisyonları otomatik olarak artır/azalt',
    scaleInThreshold: 'Artırma Eşiği',
    scaleOutThreshold: 'Azaltma Eşiği',
    enableTrailingStop: 'Takip Eden Stop\'u Etkinleştir',
    trailingStopPercent: 'Takip Eden Stop %',
    
    // Simulation Replay
    simulationReplay: 'Simülasyon Tekrarı',
    enableSimulationReplay: 'Simülasyon Tekrarını Etkinleştir',
    simulationReplayDescription: 'Stratejileri geçmiş verilerle test et',
    runReplay: 'Tekrarı Çalıştır',
    selectDate: 'Tarih Seç',
    replayResults: 'Tekrar Sonuçları',
    
    // Sentiment
    bullish: 'YÜKSELIŞ',
    bearish: 'DÜŞÜŞ',
    neutral: 'NÖTR',
    
    // Trading
    long: 'UZUN',
    short: 'KISA',
    buy: 'AL',
    sell: 'SAT',
    filled: 'TAMAMLANDI',
    pending: 'BEKLİYOR',
    cancelled: 'İPTAL',
    
    // Volume
    volume: 'Hacim',
    
    // Log Panel
    botLogs: 'Bot Günlükleri',
    clearLogs: 'Günlükleri Temizle',
    searchLogs: 'Günlüklerde ara...',
    all: 'Tümü',
    info: 'Bilgi',
    trade: 'İşlem',
    learning: 'Öğrenme',
    warning: 'Uyarı',
    error: 'Hata',
    noLogsMatchFilter: 'Mevcut filtreye uygun günlük yok',
    noLogsYet: 'Henüz günlük yok',
    totalLogs: 'Toplam günlük',
    showing: 'Gösterilen',
    
    // Log Messages
    botStarted: 'Ticaret botu {mode} modunda başlatıldı',
    botStopped: 'Ticaret botu durduruldu',
    tradeExecuted: '{action} {quantity} {symbol} ${price} fiyatından',
    positionClosed: 'Pozisyon kapatıldı: {symbol} K/Z: ${pnl} ({reason})',
    signalGenerated: '{symbol} için {action} sinyali (güven: {confidence})',
    adaptiveDecision: 'Uyarlanabilir strateji: {decision} - {reason}',
    signalEvaluation: '{symbol}: {action} (güven: {confidence})',
    randomExplorationTrade: 'Rastgele keşif ticareti: {action} {symbol}',
    fastLearningTradeExecuted: 'Hızlı Öğrenme Ticareti: {action} {symbol} (güven: {confidence})',
    earlyRetraining: 'Hızlı Öğrenme: Erken model yeniden eğitimi tetikleniyor',
    forcedExplorationTrade: '{symbol} üzerinde zorla keşif ticareti',
    learningUpdate: 'AI öğrenme güncellendi: {patterns} kalıp öğrenildi',
    riskAdjustment: 'Risk seviyesi {reason} nedeniyle {level}% olarak ayarlandı',
    tradeBlocked: 'İşlem engellendi: {symbol} - {reason}',
    fastLearningTrade: 'Hızlı öğrenme işlemi: {action} {symbol}',
    patternLearned: 'Yeni karlı kalıp öğrenildi: {description}',
    websocketConnected: '{symbol} için WebSocket bağlandı',
    websocketDisconnected: '{symbol} için WebSocket bağlantısı kesildi',
    configLoaded: 'Bot yapılandırması yüklendi',
    configSaved: 'Bot yapılandırması kaydedildi',
    portfolioUpdated: 'Portföy güncellendi: ${value} toplam değer',
    updatingPositions: '{count} pozisyon güncelleniyor',
    noMarketDataForPosition: '{symbol} pozisyonu için piyasa verisi yok',
    multiExitTriggered: '{symbol} için çoklu çıkış tetiklendi: {reason}',
    marketRegimeExit: '{symbol} için piyasa rejimi çıkışı: {reason}',
    timeBasedExit: '{symbol} için zaman tabanlı çıkış: {reason}',
    traditionalExit: '{symbol} için geleneksel çıkış: {reason}',
    entryBlocked: '{symbol} için giriş engellendi: {reason}',
    realTradeExecutionFailed: '{symbol} pozisyonunu kapatmak için gerçek ticaret yürütme başarısız',
    portfolioDebug: 'Portföy Hata Ayıklama: Kullanılabilir: ${available}, Toplam K/Z: ${totalPnl}',
    aiLearningResetComplete: 'Tam AI öğrenme sıfırlaması tamamlandı',
    allBotDataResetComplete: 'Tam bot veri sıfırlaması tamamlandı - tüm geçmiş ve istatistikler temizlendi',
    portfolioStatus: 'Portföy Durumu: {positions} pozisyon, ${totalValue} toplam değer, ${totalPnl} K/Z',
    tradingSignalGenerated: 'Ticaret sinyali: {action} {symbol} (güven: {confidence})',
    tradingLoopError: 'Ticaret döngüsü hatası',
    aggressiveTradeExecuted: 'Agresif ticaret: {action} {symbol} ({positions}/{maxPositions} pozisyon, {profitTarget} hedef)',
    maxSymbolsToTrade: 'İşlem Yapılacak Coin Sayısı',
maxSymbolsToTrade_description: 'Botun aynı anda takip edeceği maksimum coin sayısını belirler. En yüksek hacimli coinler öncelikli alınır.',
    prev: "Geri",
  next: "İleri",
  page: "Sayfa",
    duration: "Süre",
  seconds: "saniye",
  minutes: "dakika",
  hours: "saat",
  days: "gün",
  positionSize: "Pozisyon Büyüklüğü",
  tradeHistory:"Ticaret Geçmişi"
  },
};

export type TranslationKey = keyof typeof translations.en;

export const getTranslation = (key: TranslationKey, language: 'en' | 'tr' = 'en'): string => {
  return translations[language][key] || translations.en[key];
};
